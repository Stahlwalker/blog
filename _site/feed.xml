<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stahlwalker</title>
    <description>Tech blog for web programmers and digital marketers.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 19 Apr 2018 07:28:23 -0500</pubDate>
    <lastBuildDate>Thu, 19 Apr 2018 07:28:23 -0500</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>Who Has Questions???</title>
        <description>&lt;h4 id=&quot;dont-give-up-on-stack-overflow-just-yet&quot;&gt;Don’t give up on Stack Overflow just yet:&lt;/h4&gt;

&lt;p&gt;      I took the plunge a month and asked my first question on stack overflow. If there was ever a time to do it, it was now. I had been fiddling around with footers for far too long. They always seem to work one way and not the other. I’d get them to work on one website and then using the exact same CSS styling would fail horribly. Wanting answers, I went to stack overflow and searched “sticky footers”, there I found a ton of responses with a bunch of different methods for styling footers. After attempting a few with no success, I decided to ask the coding community and share the example I was working on. What happened after that completely surprised me.&lt;/p&gt;

&lt;!-- ![Figure 1-1](img/stack.png &quot;Figure 1-1&quot;){:style=&quot;float: right;margin-right: 7px;margin-top: 7px; border-radius: 50%;&quot;} --&gt;
&lt;p&gt;      Stack Overflow has a system in which users can gain positive or negative interactions through either an up or down vote for answered questions. In an online boot camp I took through Udemy, the instructor mentioned that future employers will look at your rating on Stack Overflow to see whether it’s positive or negative. Think of it as likes, the more likes you have the better coder you are, because it means other coders are authenticating that your advice helped them. Sounds great right, but there is also a downvote, and coders can mark your feedback as unhelpful. Someone with a lot of negative reviews would definitely be a red flag for potential employers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://t3.ftcdn.net/jpg/00/70/95/32/240_F_70953284_ddg71pEeAAF3Ma8LnA59dU6gCMV9HQyl.jpg&quot; alt=&quot;Some Title&quot; style=&quot;float: left;margin-left: 7px;margin-top: 7px; position: relative&quot; class=&quot;img-responsive&quot; /&gt;
      I would also like to mention there is a specific way of entering code that if you are not familiar with Stack Overflow you need to be prior to asking questions. You can’t simply copy and paste code from an editor, you have to indent four times which makes a block in your post for code. There are more of these tips you can review at &lt;a href=&quot;http://meta.stackoverflow.com/questions/251361/how-do-i-format-my-code-blocks/&quot;&gt;Stackoverflow.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;      Back to the story, so I asked my very first stack overflow question and was immediately hit with downvotes to put it mildly. Programmers suggested I look up the question first before asking, which I did, but what I really found interesting was the ability to put a question on hold by other programmers. Shortly after the handful of downvotes I received, my question was placed on hold until I could provide more information. I went through the process of adding more content to the question but the damage was done. I did have a couple coders give suggestions on how to fix the sticky footer, which I thought was helpful but didn’t solve my issue.&lt;/p&gt;

&lt;p&gt;      The key issue here is that everyone codes differently and there are plenty of different ways to place a sticky footer. You want to be able to utilize stack overflow as a resource but run the risk of being dinged for asking. Now there was definitely a learning curve here and my advice is to be as elaborate as possible and try to condense your question to one. People who ask too many questions run the risk of being flagged, put on hold or worse, the dreaded downvote.&lt;/p&gt;

&lt;p&gt;      After this experience I started asking instructors and teaching assistants how they utilize stack overflow and all of them stated they had never even asked a question, in all their years of coding. They also mentioned that they didn’t even know how to add code to the question. So, is Stack Overflow better off as a resource? I don’t believe so, much like anything there will be individuals in the community that are harsher critics, but there will also be those willing to help. For the handful of downvotes I received, I also had a couple individuals attempt to solve my question and one very responsive coder. After explaining, that I’m still learning the ins and outs of Stack Overflow, he spent time answering my questions, which goes to show that this application really can benefit people just don’t be surprised if you come across a couple harsh critics.&lt;/p&gt;

&lt;p&gt;      One of the first things they teach you when you begin your coding journey, is Google everything.  Google is your friend, search everything and anything. Who would have thought asking a simple question could lead to all this? Next time I’ll be better prepared and hopefully you will to.&lt;/p&gt;

&lt;p&gt;I hope this was helpful and feel free to comment with suggestions or questions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;span style=&quot;color:rgb(254, 57, 30)&quot;&gt;-Man of Stahl&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 16 Apr 2018 15:30:00 -0500</pubDate>
        <link>http://localhost:4000/tech/stack-overflow</link>
        <guid isPermaLink="true">http://localhost:4000/tech/stack-overflow</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>Oh My Metadata</title>
        <description>&lt;h4 id=&quot;avoiding-the-rabbit-hole&quot;&gt;Avoiding the rabbit hole:&lt;/h4&gt;
&lt;p&gt;I want to set the record straight right away and save you a lot of time, be aware of social cache. After implementing the share functionality, I made the mistake of testing my blog posts with Facebook, Twitter, and LinkedIn. I encountered a number of issues along the way.&lt;/p&gt;

&lt;p&gt;First, the share functionality worked. The problem existed with the display, I wasn’t sharing the blog post image or post description, rather the websites main image and description.  After researching the web, I found that I needed to add metadata to specifically call out the meta content. I had to add metadata to include page title, description, URL, and image.  Adding metadata was just the beginning of my decent, I had to use Facebook Open Graph Tags as well.&lt;/p&gt;

&lt;p&gt;In order to use open graphs, I had to register with Facebook as a developer. Once I registered I was given a “app_id” which had to be added to the meta tag.  After I added the app id on the meta tag, I was able to validate with Facebook in their &lt;a href=&quot;https://developers.facebook.com/tools/debug/&quot;&gt;Sharing Debugger&lt;/a&gt;. The sharing debugger confirmed how my shared post would look, and it was accurate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hooorayyyy, but wait, what about Twitter?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Twitter follows a similar path; however, you do not need to obtain a developer app id. You can preview your shared post at their &lt;a href=&quot;https://cards-dev.twitter.com/validator&quot;&gt;Twitter Card Validator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Searching how to add the metadata was easy, not knowing social sites cache your initial post was the biggest hurdle to cross. Ultimately it disrupted any further attempt to share. Even if I went back and deleted the previously shared post via Twitter, LinkedIn or Facebook, the next time I shared that post it populated the same incorrect post. That means, I was missing the image that corresponded with the post image, and the description, even though both validators we correct.&lt;/p&gt;

&lt;p&gt;I realized that whenever I upload a new blog, Facebook’s sharing debugger needs to scrape the URL to obtain the meta tags and display it correctly. If I do not scrape each new blog post, Facebook will not recognize it and will not share it properly.&lt;/p&gt;

&lt;p&gt;Key takeaway, for testing purposes, make sure you have completed your post before sharing. Once it has been shared, social media platforms will cache it and you won’t be given the opportunity to correct it. It’s important to know that as long as you have the metadata and open graphs your followers or visitors will have no problem sharing your posts. Without metadata the share ability is limited to your overall site, which will jeopardize your blog posts. Do you really want to share the same image and description over and over again? Metadata even with its hurdles and endless rabbit holes to climb down is an absolute must.&lt;/p&gt;

&lt;p&gt;I hope this was helpful and feel free to comment with suggestions or questions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-Man of Stahl&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 09 Apr 2018 11:32:00 -0500</pubDate>
        <link>http://localhost:4000/tech/meta-data</link>
        <guid isPermaLink="true">http://localhost:4000/tech/meta-data</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>The Road So Far...</title>
        <description>&lt;h4 id=&quot;here-is-what-ive-learned-so-far&quot;&gt;Here is what I’ve learned so far:&lt;/h4&gt;
&lt;p&gt;I’ve spent the last 4.5 months attending a Northwestern University Web Programming Boot Camp and here are a couple key takeaways for those thinking about becoming a web developer.&lt;/p&gt;

&lt;p&gt;While attending this boot camp, I have been doubling down on Udemy courses to further understand the why behind the how.  Northwestern does a good job of showing you how to code but a poor job of explaining the why we use different programming languages.  Northwestern alone wasn’t enough, and the idea that it’s for beginners is incredibly misleading.  For those looking to learn web programming, I’d suggest taking an online boot camp on Udemy for $20 versus the financial investment of a physical six-month program.&lt;/p&gt;

&lt;p&gt;If I could go back and do things over again, I would spend more time building my foundation prior to starting. There are hundreds of resources out there but I highly recommend Udemy. The ability to bookmark your notes and have lifetime access is a great reference. You also get certificates for completing courses which you can showcase.&lt;/p&gt;

&lt;p&gt;The pros regarding Northwestern fall on the workload.  Students are forced to put in the work at an incredibly fast pace. With online boot camps students can learn at their own pace, it doesn’t work that way with a six-month program. Learning at your own pace can drag depending on your availability. It’s much easier to get to the assignment later when it doesn’t actually have a due date. Also, having the ability to work with others, on activities and projects is a major plus. Working with other students leads to better team building experiences and real-life scenarios. As a developer, you will be tasked to work on specific sections of a project with other developers, it won’t all be on your shoulders. Gaining that working experience is something you can only really do in a classroom setting. Northwestern also offers tutoring sessions weekly, which allows you to video conference with an expert to further enhance your skillset. These are all great resources one can only get from a physical boot camp.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;What I would change?&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s important to know that because this program is only six months, they do run on a pretty strict schedule. If you think you are going to get all your questions answered you are mistaken. They simply do not have the time to stay on one subject for too long. That is where the how comes in and not the why. There simply isn’t enough time. I think less activities and more teaching would be better suited for this program. Often this program requires you to work on activities before actually explaining the topic, this can be difficult when it’s a new subject matter that has never introduced. My advice, bulk up on tutorials prior to taking a physical boot camp and I when I say bulk up, I mean a lot. The more you know the better because it is definitely not a beginner’s course. Lastly, enroll in an online boot camp that mirrors the boot camp you are taking in order to get the why and not just the how. Take it from someone who has spent the last couple months playing catch up with online tutorials and attending “office hours” before each class, it would have made learning easier if I was self-teaching through an online boot camp that ran parallel with Northwestern.&lt;/p&gt;

&lt;p&gt;It’s amazing that we have these tutorials readily available for us and if you are like me, you’ll find yourself with a never-ending wish list of tutorials once you get going.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-Man of Stahl&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 02 Apr 2018 02:52:00 -0500</pubDate>
        <link>http://localhost:4000/tech/my-journey</link>
        <guid isPermaLink="true">http://localhost:4000/tech/my-journey</guid>
        
        
        <category>Tech</category>
        
      </item>
    
  </channel>
</rss>
